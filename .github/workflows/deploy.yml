name: CICD

on:
  push:
    branches: [main]

  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: read
  packages: none

env:
  # Postgres
  POSTGRESQL_VERSION: 13.1
  POSTGRESQL_DB: amigoscode
  POSTGRESQL_USER: postgres
  POSTGRESQL_PASSWORD: password
  # Java
  JAVA_VERSION: 19

  # DockerHub
  DOCKER_HUB_USERNAME: cmingfai
  # AWS & Elastic Bean Stalk
  AWS_REGION: ap-east-1
  EB_ENVIRONMENT_NAME: Connected-env
  EB_APPLICATION_NAME: connected
  EB_DEPLOYMENT_PACKAGE: src/elasticbeanstalk/docker-compose.yml

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_DB: ${{ env.POSTGRESQL_DB }}
          POSTGRES_USER: ${{ env.POSTGRESQL_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Install docker-credential-pass
        run: |
          wget https://github.com/docker/docker-credential-helpers/releases/download/v0.6.0/docker-credential-pass-v0.6.0-amd64.tar.gz && tar -xf docker-credential-pass-v0.6.0-amd64.tar.gz && chmod +x docker-credential-pass && sudo mv docker-credential-pass /usr/local/bin/
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: "CICD ongoing... :eyes:"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: actions/checkout@v2

      - name: Setup Java JDK
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-package: jdk #
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build Number
        id: build-number
        #run: echo "::set-output name=BUILD_NUMBER::$(date '+%-d.%-m.%Y.%-H.%-M.%-S')"
        run: echo "BUILD_NUMBER={$(date '+%-d.%-m.%Y.%-H.%-M.%-S')}" >> $GITHUB_OUTPUT
      - name: Docker Login
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Maven Clean Package and Push to Dockerhub
        run: |
          ./mvnw --no-transfer-progress clean package \
            -P build-frontend \
            -P jib-push-to-dockerhub \
              -Dapp.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}}
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ":white_check_mark: pushed cmingfai/spring-boot-react:${{steps.build-number.outputs.BUILD_NUMBER}} to docker hub... https://hub.docker.com/repository/docker/cmingfai/spring-boot-react"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Update and commit app version in docker-compose.yaml
        run: |
          BUILD_NUMBER=${{steps.build-number.outputs.BUILD_NUMBER}}
          echo -e "Current elasticbeanstalk/docker-compose.yml\n$(cat src/elasticbeanstalk/docker-compose.yml)"
          sed -i -E 's_(cmingfai/spring-boot-react:)([^"]*)_\1'${BUILD_NUMBER}'_' src/elasticbeanstalk/docker-compose.yml
          echo -e "Current elasticbeanstalk/docker-compose.yml\n$(cat src/elasticbeanstalk/docker-compose.yml)"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add src/elasticbeanstalk/docker-compose.yml
          git commit -m "new app version: ${BUILD_NUMBER}"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/cmingfai/spring-boot-fullstack-professional.git

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ":elasticbeanstalk: :aws: Deployment started... :grimacing: :crossed_fingers:"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          deployment_package: ${{ env.EB_DEPLOYMENT_PACKAGE }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: Version ${{steps.build-number.outputs.BUILD_NUMBER}} deployed via github actions ${{ github.sha }}
          wait_for_deployment: 60
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ":tada: :arrow_right: http://connected-env.eba-k2yvwdec.ap-east-1.elasticbeanstalk.com"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
